/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcocoandeve_styleguides"] = self["webpackChunkcocoandeve_styleguides"] || []).push([["blog-nav-tags"],{

/***/ "./src/js/modules/blog.js":
/*!********************************!*\
  !*** ./src/js/modules/blog.js ***!
  \********************************/
/***/ (() => {

eval("$('.blog-nav-tags a').on('click', function (e) {\n  if (e.target.id === 'how-to') {\n    e.preventDefault();\n    $('.how-to-wrapper').removeClass('d-none');\n    $('.article-list-wrapper').addClass('d-none');\n  }\n});\n\n//# sourceURL=webpack://cocoandeve-styleguides/./src/js/modules/blog.js?");

/***/ }),

/***/ "./src/js/modules/carousel-scroll-product.js":
/*!***************************************************!*\
  !*** ./src/js/modules/carousel-scroll-product.js ***!
  \***************************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  var _this = this;\n\n  var adjustScrollThumb = function adjustScrollThumb(thumb, inner) {\n    var totalItems = $(inner).find('.carousel-item').length || 1; // eslint-disable-next-line no-param-reassign\n\n    thumb.style.width = \"\".concat(inner.clientWidth / totalItems / inner.clientWidth * 100, \"%\"); // eslint-disable-next-line no-param-reassign\n\n    thumb.style.left = \"\".concat(inner.scrollLeft / inner.scrollWidth * 100, \"%\");\n    /*\n    if (inner.clientWidth === inner.scrollWidth) {\n    \tinner.classList.add('justify-content-center');\n    \tscrollParent.classList.add('d-none');\n    } else {\n    \tinner.classList.remove('justify-content-center');\n    \tscrollParent.classList.remove('d-none');\n    }\n    */\n  };\n  /* activated by AB TEST trigger */\n\n\n  if ($('.carousel--scroll-product').length > 0) {\n    $('.carousel--scroll-product').each(function (index, carousel) {\n      // carousel.classList.remove('carousel--product-preview');\n      var parentNode = carousel.parentNode;\n      var inner = carousel.querySelector('.carousel-inner');\n      var scrollbar = parentNode.querySelector('.scrollbar');\n      var scrollThumb = parentNode.querySelector('.scrollbar--thumb');\n      var totalItems = $(inner).find('.carousel-item').length || 1;\n\n      if (scrollbar) {\n        carousel.addEventListener('adjustThumb', function () {\n          adjustScrollThumb(scrollThumb, inner, scrollbar.parentNode);\n        });\n        if (scrollThumb) adjustScrollThumb(scrollThumb, inner, scrollbar.parentNode);\n      }\n\n      var scrollbarWidth = scrollbar.clientWidth;\n      var gap = 15;\n      var leftTh = gap + 1;\n      var rightTh = scrollbar.clientWidth + gap;\n      var slideWidth = scrollbarWidth / totalItems;\n      var activeSlide = 0;\n\n      var innerDrag = function innerDrag() {\n        console.log('innerDrag');\n      };\n\n      var scrollDrag = function scrollDrag(e) {\n        console.log('scrollDrag');\n        var pageX = e.pageX || e.touches[0].pageX;\n        var pos = pageX - leftTh;\n        if (pageX < leftTh) pos = 0;else if (pageX > rightTh - scrollThumb.clientWidth) pos = scrollbarWidth - scrollThumb.clientWidth;\n        var slidePos = Math.floor(pos / slideWidth);\n        if (scrollThumb) scrollThumb.style.left = \"\".concat(pos / scrollbarWidth * 100, \"%\");\n\n        if (slidePos !== activeSlide) {\n          activeSlide = slidePos; // $(carousel).carousel(activeSlide);\n        }\n      };\n\n      var scrollReset = function scrollReset(e) {\n        console.log('reset', activeSlide);\n\n        if (e.type === 'touchend') {\n          scrollThumb.style.transition = 'left .3s';\n          if (scrollThumb) scrollThumb.style.left = \"\".concat(slideWidth * activeSlide / scrollbarWidth * 100, \"%\");\n          $(carousel).carousel(activeSlide);\n          setTimeout(function () {\n            scrollThumb.style.transition = 'left 0s';\n          }, 50);\n        }\n\n        document.removeEventListener('touchmove', innerDrag);\n        document.removeEventListener('touchmove', scrollDrag);\n      };\n\n      inner.addEventListener('scroll', function () {\n        if (scrollThumb) scrollThumb.style.left = \"\".concat(inner.scrollLeft / inner.scrollWidth * 100, \"%\"); // checkButton();\n      });\n\n      var eventStart = function eventStart(e) {\n        e.preventDefault();\n        document.addEventListener(e.type === 'mousedown' ? 'mousemove' : 'touchmove', e.target === scrollThumb ? scrollDrag : innerDrag);\n      };\n\n      inner.addEventListener('mousedown', eventStart, true);\n\n      if (scrollThumb) {\n        scrollThumb.addEventListener('mousedown', eventStart, true);\n        scrollThumb.addEventListener('touchstart', eventStart, true);\n        scrollThumb.addEventListener('mousedown', eventStart, true);\n        scrollThumb.addEventListener('touchstart', eventStart, true);\n        scrollThumb.addEventListener('touchend', scrollReset);\n        scrollThumb.addEventListener('mouseup', scrollReset);\n      }\n\n      $(_this).on('slide.bs.carousel', function (e) {\n        setTimeout(function () {\n          var $e = $(e.relatedTarget);\n          var idx = $e.index();\n          console.log(idx);\n          scrollThumb.style.transition = 'left .3s';\n          if (scrollThumb) scrollThumb.style.left = \"\".concat(slideWidth * idx / scrollbarWidth * 100, \"%\");\n          setTimeout(function () {\n            scrollThumb.style.transition = 'left 0s';\n          }, 50);\n        }, 500);\n      });\n    });\n  }\n});\n\n//# sourceURL=webpack://cocoandeve-styleguides/./src/js/modules/carousel-scroll-product.js?");

/***/ })

}]);